# Store the parser files generated by JavaCC
JAVACC_OUTDIR = myparser
JAVACC_FILE = minijava.jj
PARSER = $(JAVACC_OUTDIR)/MiniJavaParser.java

JAVAC_OPTIONS = -Xlint:unchecked

# AST and Visitor source files
AST = $(wildcard syntaxtree/*.java)
VISITOR = $(wildcard visitor/*.java)

# AST and Visitor class files
AST_CLASS = $(AST:.java=.class)
VISITOR_CLASS = $(VISITOR:.java=.class)


all: Main.class MainPrettyPrint.class

Main.class: Main.java $(PARSER) $(AST_CLASS) $(VISITOR_CLASS)
MainPrettyPrint.class: MainPrettyPrint.java $(PARSER) $(AST_CLASS) $(VISITOR_CLASS)

%.class: %.java
	javac $(JAVAC_OPTIONS) $<

$(PARSER): $(JAVACC_FILE) 
	# Create the directory if it does not exist
	mkdir -p $(JAVACC_OUTDIR)
	javacc -OUTPUT_DIRECTORY="$(JAVACC_OUTDIR)" $(JAVACC_FILE)
	javac $(JAVAC_OPTIONS) $(JAVACC_OUTDIR)/*.java

clean:
	rm -rf $(JAVACC_OUTDIR) *.class
	rm -f syntaxtree/*.class visitor/*.class

test0: test.java
	java Main < test.java > test0.asm
	java -jar test/Mars4_5.jar nc test0.asm

# To check if test.java is syntactically and semantically correct
test1: test.java
	java MainPrettyPrint < test.java 


